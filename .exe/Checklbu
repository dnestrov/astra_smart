Check_libs:
set LISTF = `find ./fnc -newer ${ULBR} \! -type l -print | grep "\.f"$`
set LISTC = `find ./sbr -newer ${ULBR} \! -type l -print | grep "\.c"$`
set LISTS = `find ./sbr -newer ${ULBR} \! -type l -print | grep -i "\.f"$`
set LISTS90 = \
            `find ./sbr -newer ${ULBR} \! -type l -print | grep -i "\.f90"$ | sort`
set MODIF = nonews
if ( "${LISTC}" == '' )	goto	EndC
echo \ 
echo \ \ Change\[s\] in ${AWD:t}/sbr/ are found:
foreach AA ( $LISTC )
   set AC = `echo ${AA:t}`
   set AO = `echo ${AC:r}.o` 
   if ( $AF != '' ) then
	 echo $AC
	 ${ACC} sbr/$AC >& tmp/err.tmp || goto Error
	 rm tmp/err.tmp >& /dev/null
	 ar rv  ${ULBR} $AO		>& /dev/null
	 rm $AO
	 set MODIF = sbr
   endif
end #AA
EndC:
foreach SUBD ( sbr fnc)
   if ( $SUBD == fnc ) set LIST = "${LISTF}"
   if ( $SUBD == sbr ) set LIST = "${LISTS90} ${LISTS}"
   if ( "$LIST" == '' || "$LIST" == ' ' )   goto  EndSUBD
   if (  $SUBD != sbr || "$LISTC" == '' )	then
      echo \ 
      echo \ \ Change\[s\] in ${AWD:t}/$SUBD/ are found:
   endif
   foreach AA ( $LIST )
      set AF = `echo ${AA:t}`
      set AO = `echo ${AF:r}.o`
      if ( $AF != '' ) then
	 echo $AF
echo	 ${AFC} $SUBD/$AF 
	 ${AFC} $SUBD/$AF 
	 rm tmp/err.tmp >& /dev/null
	 ar rv  ${ULBR} $AO		>& /dev/null
	 rm $AO
	 set MODIF = $SUBD
      endif
   end #AA
EndSUBD:
end		# SUBD cycle

if ( $MODIF != nonews && $MODIF != fml )	then
   ranlib ${ULBR}			>& /dev/null
   echo The user library is updated
endif

