 =====   Variables definition   =====
!--------------------------------------------------------------------------
! Equ file "glftst" is based on the GLF23 transport model
!--------------------------------------------------------------------------
!==================== Grad-Shafranov equation =============================
 NEQUIL=4.1d1
!====================  Ion densities ========================================
 AIM1=9.d0
 AIM2=4.d1
 AIM3=1.2d1
!====================  Impurity radiation ==================================
!   Contribution to Z_eff:
!   Radiation power:
!----------------------------------------------------------------------------
!==================== Auxiliary heating =====================================
!SETFUS(80.,CF7,CF8):0.01;	! Feed back control of P_alf by means of P_NB
!----------------------------------------------------------------------------
!==================== Wall neutrals =========================================
!NNCX=CNEUT1;				! NNCX is a number of iterations
! SETNAV provides neutral influx (NNCL) needed to maintain the average
! particle density at 10. (1st subroutine parameter).
! The rate is limited by the 2nd parameter: d<n_e>/dt ~= CF9
!SETNAV(10.,CF9):0.001;			! Feedback density control (via NNCL)
!----------------------------------------------------------------------------
!==================== GLF23 transport model =================================
! Output parameters:
! WORK(j,3)  CAR27 - ion diffusivity, m^2/s
! WORK(j,4)  CAR20 - torque diffusivity, m^2/s (not used)
! WORK(j,8)  CAR21 - ExB shear rate in units of CS/ROC
! WORK(j,10) CAR22 - leading mode rate in units of CS/ROC
! WORK(j,11) CAR?? - 2nd mode rate in units of CS/ROC
! WORK(j,12) CAR15 - leading mode frequency in units of CS/ROC
! WORK(j,13) CAR16 - 2nd mode frequency in units of CS/ROC
! WORK(j,1)  CAR24 - ion thermal diffusivity, m^2/s
! WORK(j,2)  CAR23 - electron thermal diffusivity, m^2/s
!----------------------------------------------------------------------------
!----------------------------------------------------------------------------
!====================  Particle transport ===================================
 CV3=1.d0-5.d-1*FJUMP(TSTART+1.d-1)-4.d-1*FJUMP(TSTART+2.1d-1)
!CN=-VP*VRHH+min(1.e2,(.5*(ABS(CAR19)-CAR19)/max(0.1,NE)*CAR2X));
!NEB=CF6;			! Boundary condition (default 0.6x10^19)
!--------------------  Helium transport -------------------------------------
!----------------------------------------------------------------------------
!====================  Heat transport equations ===========================
!TEB=CF1;	TIB=CF1;	! Boundary conditions for temperatures
!----------------------------------------------------------------------------
!====================  Poloidal field equation ==============================
!HC=HCSA;	DC=DCSA;	XC=XCSA;	! or due to Sauter-Angioni
! Additionally, BSAL calculates the bootstrap current due to alpha-particles
!MU=MUX;				! Set initial profile for \mu=1/q=MUX
!CU=CUX;	CU=FPR;		!     or, optionally, for j=CU
!----------------------------------------------------------------------------
!====================  Time step control  =================================
!====================  Sawtooth oscillations ================================
!CF10 output mode, (use 0. to suppress output). CF11=given_period
 CF11=2.d-1+3.d-1*FJUMP(1.d0)+5.d-1*FJUMP(3.d0)+FJUMP(5.d0)+3.d0*FJUMP(1.d1)+5.d0*FJUMP(3.d1)
!----------------------------------------------------------------------------
!==================== Auxiliary quantities ===============================
 CV5=8.d-4*VINT(PBLON)(a)
 CV6=1.6d-3*VINT(PBPER)(a)
 CFUS1=QDTF(a)
 CV9=TIMDER(CFUS1)
 CV10=NEAV(a)
 CV11=TIMDER(CV10)
! Total power minus radiation
 CF16=QDTF(a)+QJOUL(a)+QBTOT(a)+QEX(a)+QIX(a)-QRAD(a)+6.67d-1*QRADX(a)
 CV4=THQ99(r)/MAX(1.d-1,CF16)**6.9d-1
 CV14=VINT(PEBM)(9.5d-1*ABC)+VINT(PIBM)(9.5d-1*ABC)+QEX(9.5d-1*ABC)+QIX(9.5d-1*ABC)
!==================== Plasma rotation =====================================
!VTOR=VTORX;		VPOL=VPSWW;
!ER=BTOR*(FRS*MU*VTOR/RTOR+VDIA-VPOL);	CAR28=BTOR*FRS*MU*VTOR/RTOR;
!--------------------------------------------------------------------------
!===================== Profile output =====================================
!----------------------------------------------------------------------------
!-------  Overview  ---------------------------------- Screen number (1) ----
!-------  Power balance (1) -------------------------- Screen number (2) ----
!-------  Power balance (2) -------------------------- Screen number (3) ----
!-------  Power balance (3) -------------------------- Screen number (4) ----
!--------  Kinetics  --------------------------------- Screen number (5) ----
!--------  Particle balalnce ------------------------- Screen number (6) ----
!---------  Current & Geometry ----------------------- Screen number (7) ----
!---------  Miscellaneous  --------------------------- Screen number (8) ----
!NNCX_NNCX;		! Number of iterations in wall neutral solver
!RB_"RHO(NA1)"
!ABM_"AMETR(NA1)"
!Psca_CF16;
!Tedg_CF1;
!----------------------------------------------------------------------------
 AMAIN(r)=AMJ
 ZMAIN(r)=ZMJ
 NIZ1(r)=CIMP1*NE(r)
 ZIM1(r)=ZIBE(r)
 NIZ2(r)=CIMP2*NE(r)
 ZIM2(r)=ZIAR(r)
 NIZ3(r)=CIMP3*NE(r)
 ZIM3(r)=ZICAR(r)
 NTRIT(r)=5.d-1*(NE(r)-NIBM(r)-2.d0*NALF(r)-ZIM1(r)*NIZ1(r)-ZIM2(r)*NIZ2(r)-ZIM3(r)*NIZ3(r))
 NDEUT(r)=NTRIT(r)+NIBM(r)
 NI(r)=NDEUT(r)+NTRIT(r)+NALF(r)+NIZ1(r)+NIZ2(r)+NIZ3(r)
 ZEF1(r)=ZIBE(r)*(ZIBE(r)-1.d0)*NIZ1(r)/NE(r)
 ZEF2(r)=ZIAR(r)*(ZIAR(r)-1.d0)*NIZ2(r)/NE(r)
 ZEF3(r)=ZICAR(r)*(ZICAR(r)-1.d0)*NIZ3(r)/NE(r)
 ZEF(r)=ZZEF(r)
 PBOL1(r)=PRBER(r)*NIZ1(r)*NE(r)-PBR1(r)
 PBOL2(r)=PRARG(r)*NIZ2(r)*NE(r)-PBR2(r)
 PBOL3(r)=PRCAR(r)*NIZ3(r)*NE(r)-PBR3(r)
 PRAD(r)=PBOL1(r)+PBOL2(r)+PBOL3(r)+PBRAD(r)+CRAD2*PSYNC(r)
 CAR14(r)=WORK(J,11)*CS(r)/ROC
 CAR15(r)=WORK(J,12)*CS(r)/ROC
 CAR16(r)=WORK(J,13)*CS(r)/ROC
 CAR21(r)=WORK(J,8)*CS(r)/ROC
 CAR22(r)=WORK(J,10)*CS(r)/ROC
 CAR27(r)=WORK(J,3)
 CAR20(r)=WORK(J,4)
 CAR24(r)=MIN(CF5,WORK(J,1))
 CAR23(r)=MIN(CF5,WORK(J,2))
 CAR17(r)=FTAV(CAR25(r),CV2)
 CAR18(r)=FTAV(CAR26(r),CV2)
 CAR19(r)=FTAV(CAR29(r),CV2)
 CAR32(r)=5.d-1*(CAR19(r)+ABS(CAR19(r)))
 CAR1X(r)=GRAD(NE)(r)
 CAR30(r)=5.d-1*MIN(0.d0,(ABS(CAR19(r))-CAR19(r))/NE(r)*CAR2X(r))
 CAR30(r)=MAX(-RHO(r),CAR30(r))
 NALF(r)=F1(r)
 CAR14X(r)=SNN(r)*NE(r)
 =====   Initial distributions   =====
 TE(r)=TEX(r)
 TI(r)=TIX(r)
 NE(r)=NEX(r)
 CU(r)=FPR(r)
 F0(r)=1
 F1(r)=NEX(r)*1.4d0*CF6/1.1d1*1.5d-2
 F2(r)=1
 F3(r)=1
 F4(r)=1
 F5(r)=1
 F6(r)=1
 F7(r)=1
 F8(r)=1
 F9(r)=1
 Start-up with a prescribed CU distribution
 =====   Equations & subroutines  =====
 ---->  Subroutine  1: NBI
        is called at -Infty<TIME<+Infty with dt=0.01  
 ---->  Subroutine  2: NEUT
        is called at -Infty<TIME<+Infty with dt=Each_T
 ---->  Subroutine  3: GLF161A
        is called at -Infty<TIME<+Infty with dt=Each_T
 ---->  Subroutine  4: SMEARR(CV1,CAR23,CAR25)
        is called at -Infty<TIME<+Infty with dt=Each_T
 ---->  Subroutine  5: SMEARR(CV1,CAR24,CAR26)
        is called at -Infty<TIME<+Infty with dt=Each_T
 ---->  Subroutine  6: SMEARR(CV1,CAR27,CAR29)
        is called at -Infty<TIME<+Infty with dt=Each_T
 ---->  Subroutine  7: SMEARR(CV8,CAR1X,CAR2X)
        is called at -Infty<TIME<+Infty with dt=Each_T
 ---->  Subroutine  8: SMEARR(CV8,CAR30,CAR31)
        is called at -Infty<TIME<+Infty with dt=Each_T
  >>> Warning: Boundary condition for NE is not set.
              NEX(t) will be used at the shifted boundary
 NE is linearly interpolated between RON and ROC
 ---->  Equation for NE 
 DN(r)=HNGSE(r)+MIN(5.d0,MAX(CV3,CAR32(r)))
 CN(r)=-VP(r)*VRHH(r)+CAR31(r)
 NE(r)=NEX(r)
 SN(r)=SNEBM(r)
 SNN(r)=SNNEU(r)
F1 is linearly interpolated between RO1 and ROC
 ---->  Equation for F1 
 F1(a_b)=CIMP4
 F1(r)=NEX(r)*1.4d0*CF6/1.1d1*1.5d-2
 DF1(r)=DN(r)
 VF1(r)=CN(r)
 SF1(r)=NDEUT(r)*NTRIT(r)*SVDT(r)
  >>> Warning: Boundary condition for TE is not set.
              TEX(t) will be used at the shifted boundary
 TE is linearly interpolated between ROE and ROC
 ---->  Equation for TE  with heat convective flux multipied by GN2E
 HE(r)=HNGSE(r)+CAR17(r)
 PE(r)=PEX(r)+PEBM(r)+POH(r)-PEICL(r)+PEDT(r)-PENEU(r)-PRAD(r)
 GN2E=CF2
 TE(r)=TEX(r)
  >>> Warning: Boundary condition for TI is not set.
              TIX(t) will be used at the shifted boundary
 TI is linearly interpolated between ROI and ROC
 ---->  Equation for TI  with heat convective flux multipied by GN2I
 XI(r)=CAR18(r)+HNASC(r)
 PI(r)=PIX(r)+PIBM(r)+PEICL(r)+PIDT(r)+CNEUT2*PIONZ(r)-CNEUT3*PICX(r)
 GN2I=CF2
 TI(r)=TIX(r)
 ---->  Subroutine  9: BSAL(CAR4,CF4)
        is called at -Infty<TIME<+Infty with dt=Each_T
 ---->  Equation for CU 
 HC(r)=HCKIM(r)
 DC(r)=DCKIM(r)
 XC(r)=XCKIM(r)
 CC(r)=CNHR(r)
 CD(r)=CUBM(r)+CAR4(r)
 CU(r)=FPR(r)
 ---->  Subroutine 10: TSCTRL(CAR23,CAR23,CAR24,CF3)
        is called at -Infty<TIME<+Infty with dt=Each_T
 ---->  Subroutine 11: MIXINT(CF10,CF11)
        is called at -Infty<TIME<+Infty with dt=Each_T      Key call:X     
 =====   Radial profiles output   =====
  #  Scale  Name  Output expression
  1  1.e5   gamm  CAR22(r)
  2  .1     V_p   CAR31(r)
  3  5      D_e   DN(r)
  4  5      K_e   HE(r)
  5  -3     T_e   TE(r)
  6  -1     n_e   NE(r)
  7         Peax  PEX(r)+PEBM(r)
  8  5      K_i   XI(r)
  9  1.e5   w     -CAR15(r)
 10  .1     V_pm  CAR30(r)
 11  5      D_ef  CAR19(r)
 12  5      K_em  CAR23(r)
 13  -3     T_i   TI(r)
 14  -1     n_d   NDEUT(r)
 15         Piax  PIX(r)+PIBM(r)
 16  5      K_im  CAR24(r)
 17  -24    V_in  CN(r)
 18  1.e5   w2    CAR16(r)
 19         Gd    -DN(r)*GRAD(NE)(r)
 20         Gv    -CN(r)*NE(r)
 21  -3     T_n   TN(r)
 22         tauE  TAUE(r)
 23  -26    Q_HE  -HE(r)*NE(r)*GRAD(TE)(r)
 24  -26    Q_XI  -XI(r)*NI(r)*GRAD(TI)(r)
 25  -24    V_nc  -VP(r)*VRHH(r)
 26  -25    Gd    -DN(r)*GRAD(NE)(r)
 27         Se    SNTOT(r)
 28         SeNB  (1.d0-CV16)*SNEBM(r)
 29  -3     T_i   TI(r)
 30         taEi  TAUEI(r)
 31  1.e5   gam2  CAR14(r)
 32         Qcx   QICX(r)
 33  -4     j     CU(r)
 34         p     PREST(r)
 35         wExB  ROTSH(r)
 36         Vtor  UPL(r)
 37  -4     jNB   CUBM(r)
 38         Zeff  ZEF(r)
 39  2.     shat  SHEAR(r)
 40  1      mu    MU(r)
 41  -4     joh   CUOHM(r)
 42         p_i   PRESI(r)
 43         tpf   TPF(r)
 44         V||   ULON(r)
 45  -4     jBS   CUBS(r)
 46         sigm  CC(r)
 47         betj  BETAJ(r)
 48  5      q     1.d0/MU(r)
 49         dzBe  ZEF1(r)
 50  10     RLTi  RTOR/LTI(r)
 51         grVt  GRAD(VTORX)(r)
 52  1      nuis  NUIS(r)
 53         dzAr  ZEF2(r)
 54  10     RLNe  RTOR/LNE(r)
 55  3e4    Gflx  QN(r)
 56         dZHe  2.d0*NALF(r)/MAX(1.d-2,NE(r))
 57         nBe   NIZ1(r)
 58  10     RLTe  RTOR/LTE(r)
 59         NN    NN(r)
 60  1      nues  NUES(r)
 61         nAr   NIZ2(r)
 62         SNNn  CAR14X(r)
 63  3e4    Gsrc  QNTOT(r)
 64         nHe   NALF(r)
 65  100    QeFl  QE(r)
 66         QiN   QINEU(r)
 67         QNBI  VINT(PBEAM)(r)
 68         Qei   QEICL(r)
 69  100    QiFl  QI(r)
 70         G11   1.6d-3*G11(r)
 71         Qeax  VINT(PEBM)(r)+QEX(r)
 72         QDT1  VINT(CAR9)(r)
 73  100    QeSr  QETOT(r)
 74         QeN   QENEU(r)
 75         QOH   QOH(r)
 76         Qrad  QRAD(r)
 77  100    QiSr  QITOT(r)
 78         Qicx  QICX(r)
 79         Qiax  VINT(PIBM)(r)+QIX(r)
 80         QDT   QDT(r)
 81         QEdt  QEDWT(r)
 82         Pcx   CNEUT3*PICX(r)
 83         Pedt  PEDT(r)
 84         Pi    PITOT(r)
 85         PDT1  CAR9(r)
 86         PiN   PINEU(r)
 87         Pe    PETOT(r)
 88               0.d0
 89         QIdt  QIDWT(r)
 90         Pion  CNEUT2*PIONZ(r)
 91         Pidt  PIDT(r)
 92         Pei   PEICL(r)
 93         PDT   PEDT(r)+PIDT(r)
 94         PeN   PENEU(r)
 95         Prad  PRAD(r)
 96               0.d0
 =====   Time dependent values output   =====
  #  Scale  Name  Output expression
  1  100    Palf  CFUS1
  2         <ne>  CV10
  3  20     Q     5.d0*CFUS1/(QOH(a)+QNBI+QEX(a)+QIX(a))
  4  10     tauE  (WI(a)+WE(a))/MAX(1.d-1,CF16)
  5         PNBI  QNBI
  6  1      H98y  (WI(a)+WE(a))/MAX(1.d-1,CF16)/CV4
  7         PICR  QEX(a)+QIX(a)
  8  10     ta98  CV4
  9         Ptot  CF16
 10         PeDT  QEDTF(a)
 11         POH   QOH(a)
 12         Pnbi  VINT(PEBM)(a)+VINT(PIBM)(a)
 13         Pei   QEICL(a)
 14         PiDT  QIDTF(a)
 15         Prad  QRAD(a)
 16         Picr  QEX(a)+QIX(a)
 17         Pi    QITOT(a)
 18         PeN   QENEU(a)
 19         Qea   QE(a)
 20         Pion  CNEUT2*QINEU(a)
 21         Pe    QETOT(a)
 22         PCX   QICX(a)
 23         Qia   QI(a)
 24         PNB   QBTOT(a)
 25         Pin   CF15
 26         Pbrs  CRAD1*QBRAD(a)
 27         shth  QNBI-QBTOT(a)
 28         PrBe  VINT(PBOL1)(a)
 29  10     dQdt  CV9
 30         Psyn  CRAD2*QSYNC(a)
 31             
 32         PAr   VINT(PBOL2)(a)
 33         Te0   TE(0)
 34         H89   TAUE(a)/TITER(r)
 35         Ti0   TI(0)
 36         Wequ  WTOT(a)+7.5d-1*CV6+1.5d0*CV7
 37         <Te>  TEAV(a)
 38         Wthm  WTOT(a)
 39         <Ti>  TIAV(a)
 40         Wtot  WTOT(a)+CV7+CV6
 41         ne0   NE(0)
 42         Gflx  QN(a)
 43  1      dndt  CV11
 44         SeNN  VINT(CAR14X)(a)
 45         NNCL  NNCL
 46         Gsrs  QNTOT(a)
 47         taup  TAUP(a)
 48         SeNB  VINT(SNEBM)(a)
 49         Ipl   IPL
 50         V     VOLUME
 51         INB   IBM(a)
 52         S     SLAT(a)
 53         Ulc   UPL(a)
 54         li    LINT(a)
 55         IBS   IBS(a)+CF4
 56         Zef0  ZEF(0)
 >>> Warning: unrecognized variable BETTB
 57         betr  BETTB*ABC*BTOR/IPL
 58         ni0   NI(0)
 59         betp  BETAJ(a)
 60         ned   NEX(9.5d-1*ABC)
 61         Ted   TEX(9.5d-1*ABC)
 62         Tid   TIX(9.5d-1*ABC)
 63         AB    ABC
 64         ND1   NODE(RFA(9.5d-1*ABC))
