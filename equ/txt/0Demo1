 =====   Variables definition   =====
!----------------------------------------------------------------------------
! Equ file "m0dc" is based on the ITER-99 (ELMy H-mode) scaling
!----------------------------------------------------------------------------
! This model is similar to "m0dc" but its control algorithm is based on
! the subroutine SETFD which differs from SETFC by a step-wise control:
! Steps in CHE1 are finite and can happen after a finite time interval.
!----------------------------------------------------------------------------
 TSCALE=-5.d1
!====================  Grad-Shafranov equation ==============================
 NEQUIL=4.1d1
!====================  Ion densities ========================================
 AIM1=9.d0
 AIM2=4.d1
!NIZ2=CIMP2*NE;			! Ar density is defined below by eqn
 AIM3=6.d0
!====================  Impurity radiation ==================================
!   Contribution to Z_eff:
! CAR5=PBRAD-5.06E-5*NE*NE*sqrt(TE)*(ZEF1+ZEF2+ZEF3)
!----------------------------------------------------------------------------
!==================== Auxiliary heating =====================================
!SETFUS(80.,CF7,CF8):0.01;	! Feed back control of P_alf by means of P_NB
!NBI:1.0;	CNB1=2;		! NBI heating routine; CNB1 - number of beams
!--------------	Control algorithm for Fusion power -------------------------
! CFUS1 - Actual fusion power
! CFUS2 - Required fusion power (CFUS1-CFUS2 - command signal)
! CF7   - Actuator (additional heating power)
! CFUS3, CFUS4 - control parameters
! CFUS3 - proportional gain
! CFUS4 - derivative gain
!SETFD(CFUS1-CFUS2,CF7,CFUS3,CFUS4,0.d0):;
!----------------------------------------------------------------------------
!==================== Gas puff neutrals =====================================
 NNCX=CNEUT1
 CV12=1.d1*IPL/GP/ABC**2.d0
!SETNAV(CV12,CF9):0.001;	! Flux (parameter NNCL) adjustment
!------------------------------------//--------------------------------------
!==================== GLF23 transport model ===============================
! GLF161A:;	    ! GLF output:
! WORK(j,1)  - ion thermal diffusivity, m^2/s		!-> CAR21
! WORK(j,2)  - electron thermal diffusivity, m^2/s	!-> CAR22
! WORK(j,3)  - ion diffusivity, m^2/s			!-> CAR2
! WORK(j,4)  - torque diffusivity, m^2/s		!-> (not used)
! WORK(j,8)  - ExB shear rate in units of CS/ROC	!-> CAR2
! WORK(j,10) - leading mode rate in units of CS/ROC	!-> CAR2
! WORK(j,11) - 2nd mode rate in units of CS/ROC		!-> CAR2
! WORK(j,12) - leading mode frequency in units of CS/ROC!-> CAR2
! WORK(j,13) - 2nd mode frequency in units of CS/ROC	!-> CAR2
 CV14=CV4*TAU
!FEVEN(32,CAR1X,CAR21):;
!FEVEN(32,CAR2X,CAR22):;
!FEVEN(32,CAR3X,CAR23):;
!CF2=6.-FJUMP(TSTART+1.d1)-FJUMP(TSTART+1.5d1)-FJUMP(TSTART+2.d1)
!      -FJUMP(TSTART+2.5d1)-FJUMP(TSTART+3.d1)-FJUMP(TSTART+3.d1);
!PEX=CF2*50.*GAUSS(.2,.5);
!PIX=PEX;
!XI=CAR21+HNASC+CAR11;
!HE=CAR22+HNASC+CAR11;
 CV13=1.d-1
!DN=HNGSE+min(5.,max(CV13,CAR25));	! CV13 < DN < 5.
!DN=HNGSE+CAR27;
!CN=-VP*VRHH+CV15*CAR30;
!CN=-VP*VRHH;
!!====================  Particle transport ===================================
!CAR27="WORK(j,3)";
!SMEARR(CV1,CAR27,CAR29):;	CAR19=FTAV(CAR29,CV2); ! time (CV2) averaging
!CV3=1.-.5*FJUMP(TSTART+.1)-.4*FJUMP(TSTART+.21);
!CAR32=.5*(CAR19+ABS(CAR19));		! Diffusion coefficient is limited by
!DN=HNGSE+min(5.,max(CV3,CAR32));	! CV3 < DN < 5.
!CAR1X=GRAD(NE);			SMEARR(CV8,CAR1X,CAR2X):;
!CAR30=0.5*min(0.,(ABS(CAR19)-CAR19)/NE*CAR2X);
!CAR30=max(-RHO,CAR30);		SMEARR(CV8,CAR30,CAR31):;
!CN=-VP*VRHH+CAR31;
!CN=-VP*VRHH+min(1.e2,(.5*(ABS(CAR19)-CAR19)/max(0.1,NE)*CAR2X));
!NE:[0.95*ABC\];			! Solve equation for n_e
!============== Transport model based on 0D scaling =========================
 CF15=QDTF(a)+QJOUL(a)+QBTOT(a)
 CF16=CF15-QRAD(a)+6.67d-1*QRADX(a)
 CV3=MAX(1.d-8,CF16)
 CV1=THQ99(r)/CV3**6.9d-1
 CV2=MAX(1.d-6,TAUE(a))
 CV5=(WI(a)+WE(a))/CV3
!   Parabolic profile of anomalous diffusivity in the core:  rho_N < CBND1
!----------------------	Algorithm for 0D scaling control -------------------
! CV5 - Actual energy confinement time
! CV1 - Energy confinement time according to H99y scaling
! CHE2 - Enhancement factor
! CV1*CHE2 - Required energy conf. time (command signal)
! CHE1 - Actuator (coefficient in front of chi_e)
! CHE3, CHE4 - control parameters
! CHE3 - proportional gain, 	Use: (CHE3,CHE4)=(-0.05,-0.25)(slow time)
! CHE4 - derivative gain, 	 or  (CHE3,CHE4)=(-0.2, -0.8) (fast time)
!   Anomalous diffusivity is no less than CHI1 inside the pedestal
!CAR15=xstep(CBND1)*SQZ;	! Optionally, a squeezing factor
!CV15=frmax(CAR15);		!     due to E_r by Shaing & Hazeltine
!CAR14=CV15*CAR14;		!     can be included
!----------------------------------------------------------------------------
!====================  Particle transport ===================================
!NE=0.75*NEX;			! Initial condition as read from data file
!----------------------------------------------------------------------------
!--------------------- Helium transport -------------------------------------
!----------------------------------------------------------------------------
!======================  Argon  =============================================
!--------------	Control algorithm for the Argon transport -------------------
 CSOL1=CF15-QRAD(a)
! CSOL2  - Required energy flux through the separatrix
! CBND2 - Actuator (Ar density at the separtrix)
! CSOL3, CSOL4 - control parameters
! CSOL3 - proportional gain
! CSOL4 - derivative gain
!SETFA(CSOL1-CSOL2,CBND2,CSOL3,CSOL4,0.d0):10:50000;
!----------------------------------------------------------------------------
!NIZ2=CIMP2*NE;			! Prescribe distribution of n_Ar
!NIZ2=(F2+CIMP2)*NE;		! Set n_Ar as a solution to eqn:
!----------------------------------------------------------------------------
!====================  Heat transport equations =============================
!TE=TEX;	TI=TIX;		! Initial conditions
!PE=PEBM+POH-PEICL+PEDTF-PENEU-PRAD;
!PI=PIBM+PEICL+PIDTF+CAR6-CAR7;	! P_iNB-P_ei+P_iDT-losses_due_to_neutrals
!----------------------------------------------------------------------------
!====================  Poloidal field equation ==============================
! Additionally, BSAL calculates the bootstrap current due to alpha-particles
!BSAL(CAR4,CF4):;		! CAR4 - current density, CF4 - total current
!CU=FPR;	!MU=FPR+.3;
!----------------------------------------------------------------------------
!====================  sawtooth oscillations ================================
!MIXINT(CF10,CF11)::::M>;	! Kadomtsev's reconnection, CF11=given_period
!----------------------------------------------------------------------------
!====================  Auxiliary quantities =================================
 CV6=1.6d-3*VINT(PBPER)(a)
 CV7=8.d-4*VINT(PBLON)(a)
 CFUS1=QDTF(a)
 CV9=TIMDER(CFUS1)
 CV10=NEAV(a)
 CV11=TIMDER(CV10)
 CV16=AFR(RFVAL(CAR16X,9.5d-1)(r))
!----------------------------------------------------------------------------
!====================  Radial electric field (not used) =====================
!----------------------------------------------------------------------------
! Initial values to override exp settings
!TE=30*FPR+CF1;	TI=30*FPR+CF1;	NE=12.2-3*FX+CF6;	CU=FPR;
!TE=10*FPR+CF1;	TI=10*FPR+CF1;	NE=8*FPR**0.25+CF6;	CU=FPR;
!----------------------------------------------------------------------------
!====================  Time step control  =================================
!----------------------------------------------------------------------------
!===================== Profile output =======================================
!      YY = (NE(NA1)-NE(NA))/HROA
!      call f2spl(CAR1,CAR2,0.d0,YY,NE,,RHO,NA,0.d0,0.d0,0.d0,1.d-10)
!---------  Overview --------------------------------- Screen number (1) ----
!---------  Overview --------------------------------- Screen number (1) ----
!n_e\NE\-1;		! Electron density
!T_e\TE\-3;		! Electron temperature
!Pfus\PDTF+PEX;		! Heat source due to alphas
!RLcr\RLTCR\20;		! T_i critical gradient length IFS/PPPL
!D_e\DN;			! Electron diffusivity
!K_e\HE;			! Electron heat conductivity
!n_Ar\NIZ2\-2;		! Actual Argon density
!gA\GAITG\1.d5;		! gamma_ITG [Kotschenreuther,  et al.]
!---
!n_d\NDEUT\-1;		! Deuton density
!T_i\TI\-3;		! Ion temperature
!PNB\PBEAM;		! NB heating power density
!RLTi\RTOR/LTI\20;	! T_i gradient length
!nAr\F2;			!
!K_i\XI;			! Ion heat conductivity
!nArf\CIMP2*NE\-2;	! Reference Argon density
!smo\CAR21;
!---------  Overview --------------------------------- Screen number (2) ----
!---
!---------  Integrated power sources ---------------- Screen number (3) ----
!---
!----------  Local power densities ------------------- Screen number (4) ----
!---
!---------  Impurities ------------------------------- Screen number (5) ----
!---
!---------  Current balance -------------------------- Screen number (6) ----
!wExB\ROTSH;		! Rotational shear
!---
!====================  Time output settings =================================
!-------  Overview  ---------------------------------- Screen number (1) ----
!Kact_1./CHE1;
!Need_CV5-CV1*CHE2;	! Actual tau_Ec-tau_Sc
!-----------------------
!-------  Power balance (1) -------------------------- Screen number (2) ----
!-------  Power balance (2) -------------------------- Screen number (3) ----
!-------  Power balance (3) -------------------------- Screen number (4) ----
!--------  Kinetics  --------------------------------- Screen number (5) ----
!--------  Particle balalnce ------------------------- Screen number (6) ----
!---------  Current & Geometry ----------------------- Screen number (7) ----
!---------  Miscellaneous  --------------------------- Screen number (8) ----
!============= Thank you for using ASTRA transport code =====================
 AMAIN(r)=AMJ
 ZMAIN(r)=ZMJ
 ZIM1(r)=ZIBE(r)
 NIZ1(r)=CIMP1*NE(r)
 ZIM2(r)=ZIAR(r)
 ZIM3(r)=ZICAR(r)
 NIZ3(r)=CIMP3*NE(r)
 NTRIT(r)=5.d-1*(NE(r)-NIBM(r)-2.d0*NALF(r)-ZIM1(r)*NIZ1(r)-ZIM2(r)*NIZ2(r)-ZIM3(r)*NIZ3(r))
 NDEUT(r)=NTRIT(r)+NIBM(r)
 NI(r)=NDEUT(r)+NTRIT(r)+NALF(r)+NIZ1(r)+NIZ2(r)+NIZ3(r)
 ZEF1(r)=ZIBE(r)*(ZIBE(r)-1.d0)*NIZ1(r)/NE(r)
 ZEF2(r)=ZIAR(r)*(ZIAR(r)-1.d0)*NIZ2(r)/NE(r)
 ZEF3(r)=ZICAR(r)*(ZICAR(r)-1.d0)*NIZ3(r)/NE(r)
 ZEF(r)=ZZEF(r)
 PBOL1(r)=PRBER(r)*NIZ1(r)*NE(r)
 PBOL2(r)=PRARG(r)*NIZ2(r)*NE(r)
 PBOL3(r)=PRCAR(r)*NIZ3(r)*NE(r)
 PBOL1(r)=PBOL1(r)-PBR1(r)
 PBOL2(r)=PBOL2(r)-PBR2(r)
 PBOL3(r)=PBOL3(r)-PBR3(r)
 CAR5(r)=PBRAD(r)
 PRADX(r)=PBOL1(r)+PBOL2(r)+PBOL3(r)
 PRAD(r)=PRADX(r)+CAR5(r)+CRAD2*PSYNC(r)
 CAR31(r)=(1.d0-XSTEP(CBND1)(r))
 CAR1X(r)=MAX(0.d0,MIN(1.d1,WORK(J,1)))*CAR31(r)
 CAR2X(r)=MAX(0.d0,MIN(1.d1,WORK(J,2)))*CAR31(r)
 CAR3X(r)=CUT(1.d1,WORK(J,3))*CAR31(r)
 CAR4X(r)=WORK(J,4)*CAR31(r)
 CAR8X(r)=WORK(J,8)*CS(r)/ROC
 CAR10X(r)=WORK(J,10)*CS(r)/ROC
 CAR11X(r)=WORK(J,11)*CS(r)/ROC
 CAR12X(r)=WORK(J,12)*CS(r)/ROC
 CAR13X(r)=WORK(J,13)*CS(r)/ROC
 CAR5X(r)=MAX(0.d0,MIN(1.d1,WORK(J,3)))*CAR31(r)
 CAR6X(r)=MIN(0.d0,MAX(-1.d1,WORK(J,3)))*CAR31(r)
 CAR21(r)=FTAV(WORK(J,21),CV14)
 CAR22(r)=FTAV(WORK(J,22),CV14)
 CAR23(r)=FTAV(WORK(J,23),CV14)
 CAR27(r)=CAR23(r)
 CAR24(r)=-MIN(0.d0,CAR23(r))
 CAR23(r)=MAX(0.d0,CAR23(r))
 CAR17(r)=GRAD(NE)(r)
 CAR30(r)=CAR26(r)/MAX(1.d-1,NE(r))*CAR16(r)
 CAR30(r)=MAX(-RHO(r),CAR30(r))
 CAR12(r)=7.4d-1*(1.d0+3.d0*FX(r)**2.d0)*(1.d0-XSTEP(CBND1)(r))
 CAR13(r)=CAR13(r)/CV1/CHE1
 CAR11(r)=CHI1*XSTEP(CBND1)(r)
 CAR14(r)=CHI3*HNASI(r)
 NALF(r)=F1(r)
 NIZ2(r)=F2(r)+CIMP2*NE(r)
 CAR6(r)=CNEUT2*PIONZ(r)
 CAR7(r)=CNEUT3*PICX(r)
 CAR14X(r)=SNN(r)*NE(r)
 CAR16X(r)=(FP(r)-FP(0))/(FP(a)-FP(0))
 VTOR(r)=VTORX(r)
 VPOL(r)=VPSWW(r)
 ER(r)=BTOR*(VDIA(r)-VPOL(r)+VTOR(r)*MU(r)*FRS(r)/RTOR)
 =====   Initial distributions   =====
 TE(r)=TEX(r)
 TI(r)=TIX(r)
 NE(r)=NEX(r)
 CU(r)=CUX(r)
 F0(r)=1
 F1(r)=CIMP4
 F2(r)=CBND2
 F3(r)=1
 F4(r)=1
 F5(r)=1
 F6(r)=1
 F7(r)=1
 F8(r)=1
 F9(r)=1
 Start-up with a prescribed CU distribution
 =====   Equations & subroutines  =====
 ---->  Subroutine  1: NEUT1
        is called at -Infty<TIME<+Infty with dt=Each_T
 ---->  Subroutine  2: SETNAV(CV12,CF9)
        is called at -Infty<TIME<+Infty with dt=Each_T
 ---->  Subroutine  3: FEVEN(32,CAR1X,work(1,21))
        is called at -Infty<TIME<+Infty with dt=Each_T
 ---->  Subroutine  4: FEVEN(32,CAR2X,work(1,22))
        is called at -Infty<TIME<+Infty with dt=Each_T
 ---->  Subroutine  5: FEVEN(int(CF10),CAR3X,work(1,23))
        is called at -Infty<TIME<+Infty with dt=Each_T
 ---->  Subroutine  6: FEVEN(32,CAR23,CAR25)
        is called at -Infty<TIME<+Infty with dt=Each_T
 ---->  Subroutine  7: FEVEN(32,CAR24,CAR26)
        is called at -Infty<TIME<+Infty with dt=Each_T
 ---->  Subroutine  8: SMEARR(CV8,CAR17,CAR16)
        is called at -Infty<TIME<+Infty with dt=Each_T
 ---->  Subroutine  9: FEVEN(32,CAR30,CAR31)
        is called at -Infty<TIME<+Infty with dt=Each_T
 ---->  Subroutine 10: FEVEN(10,CAR12,CAR13)
        is called at -Infty<TIME<+Infty with dt=Each_T
 ---->  Subroutine 11: SETFC(CV5-CV1*CHE2,CHE1,CHE3,CHE4,0.d0)
        is called at -Infty<TIME<+Infty with dt=Each_T
 NE is linearly interpolated between RON and ROC
 ---->  Equation for NE 
 DN(r)=CAR13(r)+5.d-2*(CAR14(r)+CAR11(r))
 CN(r)=-VP(r)*VRHH(r)
 NE(a_b)=CF5
 SN(r)=SNEBM(r)
 SNN(r)=SNNEU(r)
 NE(r)=NEX(r)
 ---->  F1  is assigned
 F1(a_b)=CIMP4
 F1(r)=CIMP4
 DF1(r)=DN(r)
 VF1(r)=CN(r)
 SF1(r)=NDEUT(r)*NTRIT(r)*SVDT(r)
 ---->  F2  is assigned
 F2(a_b)=CBND2
 F2(r)=CBND2
 DF2(r)=DN(r)
 VF2(r)=CN(r)
 ---->  Equation for TE 
 HE(r)=CAR13(r)+CAR14(r)+CAR11(r)
 TE(a_b)=CF1
 PE(r)=PEX(r)+PEBM(r)-PEICL(r)+PEDTF(r)-PRAD(r)
 TE(r)=TEX(r)
 ---->  Equation for TI 
 XI(r)=CHI2*CAR13(r)+CAR14(r)+CAR11(r)
 TI(a_b)=CF1
 PI(r)=PIX(r)+PIBM(r)+PEICL(r)+PIDTF(r)
 TI(r)=TIX(r)
 ---->  Equation for CU 
 HC(r)=HCSA(r)
 DC(r)=DCSA(r)
 XC(r)=XCSA(r)
 CD(r)=CUBM(r)+CAR4(r)
 CC(r)=CCD1*CNHR(r)
 MU(r)=MUX(r)
 CU(r)=CUX(r)
 ---->  Subroutine 12: TSCTRL(CAR1X,CAR2X,CAR3X,CF3)
        is called at -Infty<TIME<+Infty with dt=Each_T
 =====   Radial profiles output   =====
  #  Scale  Name  Output expression
  1  10     cr17  -CAR17(r)
  2  .1     CNan  CAR30(r)
  3  10     Dglf  CAR3X(r)
  4         CN    CN(r)
  5  -3     T_e   TE(r)
  6  10     D_e   DN(r)
  7  15     n_e   NE(r)
  8  10     K_ig  WORK(J,1)
  9  10     cr16  -CAR16(r)
 10  .1     CNeo  -VP(r)*VRHH(r)
 11  10     D_in  -CAR24(r)
 12  10     K_e   HE(r)
 13  -3     T_i   TI(r)
 14  10     K_i   XI(r)
 15  10     Dsmo  1.d1+CAR23(r)
 16  10     K_ia  CAR21(r)
 17         Gsrc  QNTOT(r)
 18         Gsrc  QNTOT(r)
 19         Gd    -DN(r)*GRAD(NE)(r)
 20         Se    SNTOT(r)
 21  -6     QeFl  QE(r)
 22  -6     QiFl  QI(r)
 23  -5     tauE  TAUE(r)
 24  -5     taEe  TAUEE(r)
 25         Gflx  QN(r)
 26         Gflx  QN(r)
 27         Gv    -CN(r)*NE(r)
 28         SeNB  SNEBM(r)
 29         QiN   QINEU(r)
 30         QeN   QENEU(r)
 31               0.d0
 32  -5     taEi  TAUEI(r)
 33  -8     QeSr  QETOT(r)
 34         Qei   QEICL(r)
 35         QNBI  VINT(PBEAM)(r)
 36         Qion  VINT(CAR6)(r)
 37  -9     QiSr  QITOT(r)
 38         QeGN  2.5d0*GN(r)*TE(r)
 39         QeNB  VINT(PEBM)(r)
 40  -7     QDTf  QDTF(r)
 41  -8     QeFl  QE(r)
 42         QeiG  QEIGN(r)
 43         QOH   QOH(r)
 44         Qicx  QICX(r)
 45  -9     QiFl  QI(r)
 46         QiGN  2.5d0*GN(r)*TI(r)*NI(r)/NE(r)
 47         QiNB  VINT(PIBM)(r)
 48  -7     Qrad  QRAD(r)
 49         QEdt  QEDWT(r)
 50         Pcx   CNEUT3*PICX(r)
 51         Pedt  PEDTF(r)
 52         Pi    PITOT(r)
 53         PDTf  PDTF(r)
 54         PeN   PENEU(r)
 55         Pe    PETOT(r)
 56         PeNB  PEBM(r)
 57         QIdt  QIDWT(r)
 58         Pion  CNEUT2*PIONZ(r)
 59         Pidt  PIDTF(r)
 60         Pei   PEICL(r)
 61         PDT1  PEDT1(r)+PIDT1(r)
 62         PiN   PINEU(r)
 63         Prad  PRAD(r)
 64         PiNB  PIBM(r)
 65         dzBe  ZEF1(r)
 66         dZHe  2.d0*NALF(r)/MAX(1.d-2,NE(r))
 67         Zeff  ZEF(r)
 68  10     lnNN  1.d0+LOG(NN(r))
 69         n_A~  F2(r)+CIMP2*NE(r)
 70         n_He  NALF(r)
 71  1      nuis  NUIS(r)
 72         T_i   TI(r)
 73         dzAr  ZEF2(r)
 74         dzC   ZEF3(r)
 75         SNNn  CAR14X(r)
 76         tpf   TPF(r)
 77         n_Ar  NIZ2(r)
 78         n_Be  NIZ1(r)
 79  1      nues  NUES(r)
 80         T_N   TN(r)
 81  1.25   j     CU(r)
 82  1.25   jBS   CUBS(r)+CAR4(r)
 83  2.     shir  SHEAR(r)
 84  -1     Vtor  UPL(r)
 85  1.25   jNB   CUBM(r)
 86  1      mu    MU(r)
 87         psi   FP(r)
 88         Delt  CF10*RLS(r)
 89  1.25   joh   CUOHM(r)
 90         jBSa  CAR4(r)
 91         betj  BETAJ(r)
 92  -1     V||   ULON(r)
 93  1.25   jBSm  CUBS(r)
 94  5      q     1.d0/MU(r)
 95         sigm  CC(r)
 96         rpol  RLS(r)/RTOR*RHO(r)
 =====   Time dependent values output   =====
  #  Scale  Name  Output expression
  1         Pfus  CFUS1*5.d-3
  2         Psep  CSOL1
  3         Q     5.d0*CFUS1/(QEX(a)+QIX(a)+VINT(PBEAM)(a)+1.d-3)
  4  -6     tauE  CV5
  5         H98y  CV5/CV1
  6         Paux  (QEX(a)+QIX(a))
  7         <ne>  CV10
  8  -6     ta98  CV1
  9         Ptot  QTOT(a)
 10         PeDT  QEDTF(a)
 11         POH   QOH(a)
 12         PeNB  VINT(PEBM)(a)
 13         Pei   QEICL(a)
 14         PiDT  QIDTF(a)
 15         Prad  QRAD(a)
 16         PiNB  VINT(PIBM)(a)
 17         Pi    QITOT(a)
 18         PeN   QENEU(a)
 19         Qea   QE(a)
 20         Pion  CNEUT2*QINEU(a)
 21         Pe    QETOT(a)
 22         PCX   QICX(a)
 23         Qia   QI(a)
 24         PNB   QBTOT(a)
 25         Pin   CF15
 26         Pbrs  QBRAD(a)
 27         shth  QNBI-QBTOT(a)
 28         PrBe  VINT(PBOL1)(a)
 29  10     dQdt  CV9
 30         Psyn  CRAD2*QSYNC(a)
 31         Psep  CSOL1
 32         PAr   VINT(PBOL2)(a)
 33         Te0   TE(0)
 34         H89   TAUE(a)/TITER(r)
 35         Ti0   TI(0)
 36         Wequ  WTOT(a)+7.5d-1*CV6+1.5d0*CV7
 37         <Te>  TEAV(a)
 38         Zef0  ZEF(0)
 39         <Ti>  TIAV(a)
 40         Wtot  WTOT(a)+CV7+CV6
 41         ne0   NE(0)
 42         Gflx  QN(a)
 43  1      dndt  CV11
 44         SeNN  VINT(CAR14X)(a)
 45         NNCL  NNCL
 46         Gsrs  QNTOT(a)
 47         taup  TAUP(a)
 48         SeNB  VINT(SNEBM)(a)
 49         Ipl   IPL
 50         V     VOLUME
 51         INB   IBM(a)
 52         S     SLAT(a)
 53         Ulc   UPL(a)
 54         li    LINT(a)
 55         IBS   IBS(a)+CF4
 56         q95   1.d0/MU(CV16)
 57         beTr  BETT(a)*ABC*BTOR/IPL
 58         nGrn  CV12
 59         betp  BETAJ(a)
 60         nped  NE(AFX(CBND1))
 61         NNCX  NNCX
 62         Tped  TE(AFX(CBND1))
 63         Pped  1.6d0*(NE(AFX(CBND1))*TE(AFX(CBND1))+NI(AFX(CBND1))*TI(AFX(CBND1)))
 64         Tedg  CF1
